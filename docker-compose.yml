version: '3.8'

services:
  keycloak:
    image: keycloak/keycloak:26.2
    container_name: keycloak
    ports:
      - 5000:8080
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: Pass123$
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: Pass123$
    command:
      - start-dev
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    depends_on:
      - postgres
    networks:
      - infra

  konga:
    image: pantsel/konga:0.14.9
    depends_on:
      - kong
    ports:
      - "1337:1337"
    volumes:
      - ./volumes/konga:/app/kongadata
    networks:
      - infra

  kong:
    image: kong:3.3.1-alpine
    container_name: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_USER: admin
      KONG_PG_PASSWORD: Pass123$
      KONG_PASSWORD: Pass123$
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - "8000:8000"   # Porta do proxy
      - "8443:8443"   # Porta do proxy SSL
      - "8001:8001"   # Porta da API administrativa
      - "8444:8444"   # Porta da API administrativa SSL
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - postgres
    networks:
      - infra

  kong-migrations:
    image: kong:3.3.1-alpine
    depends_on:
      - postgres
    entrypoint: >
      /bin/sh -c "
      kong migrations bootstrap &&
      kong migrations up &&
      kong migrations finish"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_USER: admin
      KONG_PG_PASSWORD: Pass123$
    networks:
      - infra

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    environment:
      POSTGRES_PASSWORD: Pass123$
      POSTGRES_USER: admin
      POSTGRES_DB: keycloak
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - infra

  api:
    container_name: api
    build: .
    expose:
      - "8080:8080"
    networks:
      - infra


networks:
  infra:
    driver: bridge